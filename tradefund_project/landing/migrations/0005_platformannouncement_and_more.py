# Generated by Django 5.2.1 on 2025-05-17 15:48

import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('landing', '0004_trader_userprofile_assigned_trader_portfoliosnapshot'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Optional: When this announcement should no longer be prominently displayed.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Controls if the announcement is currently displayed to users.')),
                ('level', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical'), ('SUCCESS', 'Success')], default='INFO', max_length=10)),
            ],
            options={
                'ordering': ['-publish_date'],
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='notify_email_payouts',
            field=models.BooleanField(default=True, help_text='Receive email notifications for profit payouts.'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='notify_email_platform_updates',
            field=models.BooleanField(default=True, help_text='Receive email notifications for important platform updates.'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='notify_email_security_alerts',
            field=models.BooleanField(default=True, help_text='Receive email notifications for security alerts.'),
        ),
        migrations.CreateModel(
            name='KYCProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_SUBMITTED', 'Not Submitted'), ('PENDING_SUBMISSION', 'Pending Submission (User to complete)'), ('SUBMITTED', 'Submitted (Pending Review)'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('NEEDS_RESUBMISSION', 'Needs Resubmission')], default='NOT_SUBMITTED', max_length=20)),
                ('full_legal_name', models.CharField(blank=True, max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('country_of_residence', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('id_document_type', models.CharField(blank=True, choices=[('PASSPORT', 'Passport'), ('NATIONAL_ID', 'National ID Card'), ('DRIVERS_LICENSE', "Driver's License")], max_length=20, null=True)),
                ('id_document_file', models.FileField(blank=True, null=True, upload_to='kyc_documents/ids/')),
                ('proof_of_address_file', models.FileField(blank=True, null=True, upload_to='kyc_documents/address_proofs/')),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('reviewer_notes', models.TextField(blank=True, help_text='Notes from admin/staff after review.')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('link', models.URLField(blank=True, help_text='Optional link related to the notification', null=True)),
                ('type', models.CharField(choices=[('PAYOUT', 'Profit Payout'), ('TRADE_SUMMARY', 'Trade Summary'), ('PLATFORM', 'Platform Update'), ('SECURITY', 'Security Alert'), ('TIER_CHANGE', 'Tier Change'), ('GENERAL', 'General Info')], default='GENERAL', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('AGREEMENT_INVESTMENT', 'Investment Agreement'), ('STATEMENT_TAX', 'Tax Statement'), ('STATEMENT_EARNINGS', 'Earnings Statement'), ('REPORT_PERFORMANCE', 'Performance Report'), ('OTHER', 'Other Document')], max_length=50)),
                ('file', models.FileField(upload_to='user_documents/%Y/%m/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
